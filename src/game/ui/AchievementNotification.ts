// src/game/ui/AchievementNotification.ts
import * as Phaser from 'phaser';
import { Achievement } from '../state/GameState';

export class AchievementNotification {
  private scene: Phaser.Scene;
  private container!: Phaser.GameObjects.Container;
  private static activeNotifications: number = 0;

  constructor(scene: Phaser.Scene, achievement: Achievement) {
    this.scene = scene;
    this.show(achievement);
  }

  private show(achievement: Achievement): void {
    // –ü–æ–∑–∏—Ü–∏—è (—Å —É—á—ë—Ç–æ–º –¥—Ä—É–≥–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
    const yOffset = AchievementNotification.activeNotifications * 90;
    const startX = 850; // –ó–∞ —ç–∫—Ä–∞–Ω–æ–º —Å–ø—Ä–∞–≤–∞
    const endX = 600;   // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    this.container = this.scene.add.container(startX, 100 + yOffset);
    this.container.setDepth(200);

    // –§–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∫–∞—Ä—Ç–æ—á–∫–∞)
    const bg = this.scene.add.rectangle(0, 0, 220, 70, 0xffffff, 1);
    bg.setStrokeStyle(3, 0xffd700);
    this.container.add(bg);

    // –°–∏—è–Ω–∏–µ (–∑–æ–ª–æ—Ç–æ–π border —ç—Ñ—Ñ–µ–∫—Ç)
    const glow = this.scene.add.rectangle(0, 0, 220, 70, 0xffd700, 0.3);
    this.container.add(glow);

    // –ü—É–ª—å—Å–∞—Ü–∏—è —Å–∏—è–Ω–∏—è
    this.scene.tweens.add({
      targets: glow,
      alpha: { from: 0.3, to: 0.6 },
      duration: 800,
      yoyo: true,
      repeat: 2,
    });

    // –ò–∫–æ–Ω–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    const icon = this.scene.add.text(-90, 0, achievement.icon, {
      fontSize: '36px',
    });
    icon.setOrigin(0.5);
    this.container.add(icon);

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ "üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!"
    const title = this.scene.add.text(10, -20, 'üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!', {
      fontSize: '14px',
      color: '#ffd700',
      fontStyle: 'bold',
    });
    title.setOrigin(0, 0.5);
    this.container.add(title);

    // –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    const name = this.scene.add.text(10, 5, achievement.name, {
      fontSize: '16px',
      color: '#333333',
      fontStyle: 'bold',
    });
    name.setOrigin(0, 0.5);
    this.container.add(name);

    // –û–ø–∏—Å–∞–Ω–∏–µ
    const description = this.scene.add.text(10, 22, achievement.description, {
      fontSize: '11px',
      color: '#666666',
      wordWrap: { width: 180 },
    });
    description.setOrigin(0, 0.5);
    this.container.add(description);

    // –ó–≤—ë–∑–¥–æ—á–∫–∏ –≤–æ–∫—Ä—É–≥ (—ç—Ñ—Ñ–µ–∫—Ç)
    for (let i = 0; i < 3; i++) {
      const star = this.scene.add.text(
        Phaser.Math.Between(-110, 110),
        Phaser.Math.Between(-40, 40),
        '‚ú®',
        { fontSize: '20px' }
      );
      star.setOrigin(0.5);
      this.container.add(star);

      // –ê–Ω–∏–º–∞—Ü–∏—è –∑–≤—ë–∑–¥–æ—á–µ–∫
      this.scene.tweens.add({
        targets: star,
        alpha: 0,
        y: star.y - 30,
        duration: 1500,
        ease: 'Power2',
      });
    }

    AchievementNotification.activeNotifications++;

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è (slide in)
    this.scene.tweens.add({
      targets: this.container,
      x: endX,
      duration: 500,
      ease: 'Back.easeOut',
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
    this.scene.time.delayedCall(4000, () => {
      this.hide();
    });
  }

  private hide(): void {
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è (slide out)
    this.scene.tweens.add({
      targets: this.container,
      x: 850,
      alpha: 0,
      duration: 400,
      ease: 'Back.easeIn',
      onComplete: () => {
        this.container.destroy();
        AchievementNotification.activeNotifications--;
      },
    });
  }

  public static resetCounter(): void {
    AchievementNotification.activeNotifications = 0;
  }
}